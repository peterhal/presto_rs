//! The set of non-reserved (aka non-keyword) identifiers that are
//! special cased in the grammar.
use std::fmt;

#[derive(Copy, Clone, Debug, PartialEq, Eq)]
#[allow(non_upper_case_globals, non_camel_case_types)]
pub enum PredefinedName {
    ADD,
    ADMIN,
    ALL,
    ANALYZE,
    ANY,
    ARRAY,
    ASC,
    AT,
    BERNOULLI,
    CALL,
    CASCADE,
    CATALOGS,
    COLUMN,
    COLUMNS,
    COMMENT,
    COMMIT,
    COMMITTED,
    CURRENT,
    CURRENT_ROLE,
    DATA,
    DATE,
    DAY,
    DESC,
    DISTRIBUTED,
    DOUBLE,
    EXCLUDING,
    EXPLAIN,
    FILTER,
    FIRST,
    FOLLOWING,
    FORMAT,
    FUNCTIONS,
    GRANT,
    GRANTED,
    GRANTS,
    GRAPHVIZ,
    HOUR,
    IF,
    INCLUDING,
    INPUT,
    INTERVAL,
    IO,
    ISOLATION,
    JSON,
    LAST,
    LATERAL,
    LEVEL,
    LIMIT,
    LOGICAL,
    MAP,
    MINUTE,
    MONTH,
    NFC,
    NFD,
    NFKC,
    NFKD,
    NO,
    NONE,
    NULLIF,
    NULLS,
    ONLY,
    OPTION,
    ORDINALITY,
    OUTPUT,
    OVER,
    PARTITION,
    PARTITIONS,
    PATH,
    POSITION,
    PRECEDING,
    PRECISION,
    PRIVILEGES,
    PROPERTIES,
    RANGE,
    READ,
    RENAME,
    REPEATABLE,
    REPLACE,
    RESET,
    RESTRICT,
    REVOKE,
    ROLE,
    ROLES,
    ROLLBACK,
    ROW,
    ROWS,
    SCHEMA,
    SCHEMAS,
    SECOND,
    SERIALIZABLE,
    SESSION,
    SET,
    SETS,
    SHOW,
    SOME,
    START,
    STATS,
    SUBSTRING,
    SYSTEM,
    TABLES,
    TABLESAMPLE,
    TEXT,
    TIME,
    TIMESTAMP,
    TO,
    TRANSACTION,
    TRY_CAST,
    TYPE,
    UNBOUNDED,
    UNCOMMITTED,
    USE,
    USER,
    VALIDATE,
    VERBOSE,
    VIEW,
    WORK,
    WRITE,
    YEAR,
    ZONE,
}

impl fmt::Display for PredefinedName {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        write!(f, "{:?}", self)
    }
}

impl PredefinedName {
    pub fn matches(&self, value: &str) -> bool {
        self.to_string().eq_ignore_ascii_case(value)
    }
}

pub fn maybe_get_predefined_name(value: &str) -> Option<PredefinedName> {
    match value.to_ascii_uppercase().as_str() {
        "ADD" => Some(PredefinedName::ADD),
        "ADMIN" => Some(PredefinedName::ADMIN),
        "ALL" => Some(PredefinedName::ALL),
        "ANALYZE" => Some(PredefinedName::ANALYZE),
        "ANY" => Some(PredefinedName::ANY),
        "ARRAY" => Some(PredefinedName::ARRAY),
        "ASC" => Some(PredefinedName::ASC),
        "AT" => Some(PredefinedName::AT),
        "BERNOULLI" => Some(PredefinedName::BERNOULLI),
        "CALL" => Some(PredefinedName::CALL),
        "CASCADE" => Some(PredefinedName::CASCADE),
        "CATALOGS" => Some(PredefinedName::CATALOGS),
        "COLUMN" => Some(PredefinedName::COLUMN),
        "COLUMNS" => Some(PredefinedName::COLUMNS),
        "COMMENT" => Some(PredefinedName::COMMENT),
        "COMMIT" => Some(PredefinedName::COMMIT),
        "COMMITTED" => Some(PredefinedName::COMMITTED),
        "CURRENT" => Some(PredefinedName::CURRENT),
        "CURRENT_ROLE" => Some(PredefinedName::CURRENT_ROLE),
        "DATA" => Some(PredefinedName::DATA),
        "DATE" => Some(PredefinedName::DATE),
        "DAY" => Some(PredefinedName::DAY),
        "DESC" => Some(PredefinedName::DESC),
        "DISTRIBUTED" => Some(PredefinedName::DISTRIBUTED),
        "DOUBLE" => Some(PredefinedName::DOUBLE),
        "EXCLUDING" => Some(PredefinedName::EXCLUDING),
        "EXPLAIN" => Some(PredefinedName::EXPLAIN),
        "FILTER" => Some(PredefinedName::FILTER),
        "FIRST" => Some(PredefinedName::FIRST),
        "FOLLOWING" => Some(PredefinedName::FOLLOWING),
        "FORMAT" => Some(PredefinedName::FORMAT),
        "FUNCTIONS" => Some(PredefinedName::FUNCTIONS),
        "GRANT" => Some(PredefinedName::GRANT),
        "GRANTED" => Some(PredefinedName::GRANTED),
        "GRANTS" => Some(PredefinedName::GRANTS),
        "GRAPHVIZ" => Some(PredefinedName::GRAPHVIZ),
        "HOUR" => Some(PredefinedName::HOUR),
        "IF" => Some(PredefinedName::IF),
        "INCLUDING" => Some(PredefinedName::INCLUDING),
        "INPUT" => Some(PredefinedName::INPUT),
        "INTERVAL" => Some(PredefinedName::INTERVAL),
        "IO" => Some(PredefinedName::IO),
        "ISOLATION" => Some(PredefinedName::ISOLATION),
        "JSON" => Some(PredefinedName::JSON),
        "LAST" => Some(PredefinedName::LAST),
        "LATERAL" => Some(PredefinedName::LATERAL),
        "LEVEL" => Some(PredefinedName::LEVEL),
        "LIMIT" => Some(PredefinedName::LIMIT),
        "LOGICAL" => Some(PredefinedName::LOGICAL),
        "MAP" => Some(PredefinedName::MAP),
        "MINUTE" => Some(PredefinedName::MINUTE),
        "MONTH" => Some(PredefinedName::MONTH),
        "NFC" => Some(PredefinedName::NFC),
        "NFD" => Some(PredefinedName::NFD),
        "NFKC" => Some(PredefinedName::NFKC),
        "NFKD" => Some(PredefinedName::NFKD),
        "NO" => Some(PredefinedName::NO),
        "NONE" => Some(PredefinedName::NONE),
        "NULLIF" => Some(PredefinedName::NULLIF),
        "NULLS" => Some(PredefinedName::NULLS),
        "ONLY" => Some(PredefinedName::ONLY),
        "OPTION" => Some(PredefinedName::OPTION),
        "ORDINALITY" => Some(PredefinedName::ORDINALITY),
        "OUTPUT" => Some(PredefinedName::OUTPUT),
        "OVER" => Some(PredefinedName::OVER),
        "PARTITION" => Some(PredefinedName::PARTITION),
        "PARTITIONS" => Some(PredefinedName::PARTITIONS),
        "PATH" => Some(PredefinedName::PATH),
        "POSITION" => Some(PredefinedName::POSITION),
        "PRECEDING" => Some(PredefinedName::PRECEDING),
        "PRECISION" => Some(PredefinedName::PRECISION),
        "PRIVILEGES" => Some(PredefinedName::PRIVILEGES),
        "PROPERTIES" => Some(PredefinedName::PROPERTIES),
        "RANGE" => Some(PredefinedName::RANGE),
        "READ" => Some(PredefinedName::READ),
        "RENAME" => Some(PredefinedName::RENAME),
        "REPEATABLE" => Some(PredefinedName::REPEATABLE),
        "REPLACE" => Some(PredefinedName::REPLACE),
        "RESET" => Some(PredefinedName::RESET),
        "RESTRICT" => Some(PredefinedName::RESTRICT),
        "REVOKE" => Some(PredefinedName::REVOKE),
        "ROLE" => Some(PredefinedName::ROLE),
        "ROLES" => Some(PredefinedName::ROLES),
        "ROLLBACK" => Some(PredefinedName::ROLLBACK),
        "ROW" => Some(PredefinedName::ROW),
        "ROWS" => Some(PredefinedName::ROWS),
        "SCHEMA" => Some(PredefinedName::SCHEMA),
        "SCHEMAS" => Some(PredefinedName::SCHEMAS),
        "SECOND" => Some(PredefinedName::SECOND),
        "SERIALIZABLE" => Some(PredefinedName::SERIALIZABLE),
        "SESSION" => Some(PredefinedName::SESSION),
        "SET" => Some(PredefinedName::SET),
        "SETS" => Some(PredefinedName::SETS),
        "SHOW" => Some(PredefinedName::SHOW),
        "SOME" => Some(PredefinedName::SOME),
        "START" => Some(PredefinedName::START),
        "STATS" => Some(PredefinedName::STATS),
        "SUBSTRING" => Some(PredefinedName::SUBSTRING),
        "SYSTEM" => Some(PredefinedName::SYSTEM),
        "TABLES" => Some(PredefinedName::TABLES),
        "TABLESAMPLE" => Some(PredefinedName::TABLESAMPLE),
        "TEXT" => Some(PredefinedName::TEXT),
        "TIME" => Some(PredefinedName::TIME),
        "TIMESTAMP" => Some(PredefinedName::TIMESTAMP),
        "TO" => Some(PredefinedName::TO),
        "TRANSACTION" => Some(PredefinedName::TRANSACTION),
        "TRY_CAST" => Some(PredefinedName::TRY_CAST),
        "TYPE" => Some(PredefinedName::TYPE),
        "UNBOUNDED" => Some(PredefinedName::UNBOUNDED),
        "UNCOMMITTED" => Some(PredefinedName::UNCOMMITTED),
        "USE" => Some(PredefinedName::USE),
        "USER" => Some(PredefinedName::USER),
        "VALIDATE" => Some(PredefinedName::VALIDATE),
        "VERBOSE" => Some(PredefinedName::VERBOSE),
        "VIEW" => Some(PredefinedName::VIEW),
        "WORK" => Some(PredefinedName::WORK),
        "WRITE" => Some(PredefinedName::WRITE),
        "YEAR" => Some(PredefinedName::YEAR),
        "ZONE" => Some(PredefinedName::ZONE),
        _ => None,
    }
}
